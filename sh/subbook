#!/bin/bash
#
# Split PDF into sub-books
#
# Usage: subbook.sh PDF [SPLIT [...]]
#
# If splits are specified, books are split AFTER the specified pages
#
# If no splits are specified, an attempt is made to make ~40 page books,
# which are ~10 double-sided pages when printed, with all but the last
# book having the same number of pages, and that a multiple of 4.
# Short books (<57 pages) are not split.
#
# Books should be printed to flip on the short edge.
#
# 2016 Chris Markiewicz

set -e

BASE=$(dirname "$1")/$(basename "$1" .pdf)
TMPDIR=$(mktemp -dt subbook.XXXXX)
NPAGES=$(pdfinfo "$1" | grep Pages | sed -e 's/.*: *//')
shift;

ENDS=$@

set -x

# Split pages
pdfseparate "$BASE.pdf" "$TMPDIR/page-%03d.pdf"

{ set +x; } 2> /dev/null

# Don't split short documents (56 pages is within stapler limits)
# unless given explicit split
if [ $NPAGES -le 56 -a $# -eq 0 ]; then
    set -x
    rm -r $TMPDIR
    pdfbook --short-edge "$BASE.pdf" &> /dev/null
    exit 0
fi

# If no specification, split at roughly 40 pages
if [ $# -eq 0 ]; then
    ENDS=()
    # Number of subbooks (minus 1)
    let SUBS=($NPAGES-1)/40
    # Interval should be a multiple of 4, aiming for similar sizes
    # across subbooks
    let "INTERVAL = NPAGES / ($SUBS+1) / 4 * 4"
    for SUB in `seq 1 $SUBS`; do
        ENDS=(${ENDS[@]} `expr $SUB "*" $INTERVAL`)
    done
fi

ENDS=(${ENDS[@]} $NPAGES)

# Produce subbooks
START=1
SUBBOOK=1
for END in ${ENDS[*]}; do
    PADDED=$(printf "{%03d..%03d}" $START $END)
    set -x
    eval pdfunite "$TMPDIR"/page-$PADDED.pdf "$TMPDIR/$SUBBOOK.pdf"
    pdfbook --short-edge "$TMPDIR/$SUBBOOK.pdf" \
        -o "$BASE.${SUBBOOK}-book.pdf" &> /dev/null
    { set +x; } 2> /dev/null
    let START=$END+1
    let SUBBOOK=SUBBOOK+1
done

set -x
rm -r "$TMPDIR"
